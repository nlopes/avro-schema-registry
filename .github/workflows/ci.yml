name: Rust

on:
  push:
    branches: [ master ]
  pull_request:
    branches: '*'

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.nightly }}
    env:
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/diesel_testing
      RUST_TEST_THREADS: 1
      SCHEMA_REGISTRY_PASSWORD: silly_password

    strategy:
      fail-fast: false
      matrix:
        toolchain: [ 'stable' ]
        nightly: [false]
        include:
          - toolchain: 'nightly'
            nightly: true

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v2

    - name: Install latest nightly
      uses: actions-rs/toolchain@v1
      with:
          profile: minimal
          toolchain: ${{ matrix.toolchain }}
          override: true
          components: rustfmt, clippy

    - name: Cache cargo registry
      uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
        key: rust_${{ matrix.toolchain }}-cargo-${{ hashFiles('**/Cargo.toml') }}

    - name: Install diesel
      uses: actions-rs/cargo@v1
      with:
        command: install
        args: diesel_cli --no-default-features --features postgres

    # this needs to come before running diesel migrations due to change in formatting
    # in the generated file src/db/models/schema.rs
    - name: Run cargo fmt
      uses: actions-rs/cargo@v1
      with:
        command: fmt
        args: --all -- --check

    - name: Run migrations
      run: |
        diesel setup
        diesel migration run

    - name: Run tests
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --all-features --all-targets --verbose

    - name: Run doc tests
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --doc --verbose

    - name: Run clippy
      uses: actions-rs/cargo@v1
      with:
        command: clippy
        args: --all-targets --all-features -- -Dunused_imports
